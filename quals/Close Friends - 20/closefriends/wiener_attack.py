
from sympy.solvers import solve
from sympy import Symbol

def partial_quotiens(x, y):
    pq = []
    while x != 1:
        pq.append(x / y)
        a = y
        b = x % y
        x = a
        y = b
    #print pq
    return pq

def rational(pq):
    i = len(pq) - 1
    num = pq[i]
    denom = 1
    while i > 0:
        i -= 1
        a = (pq[i] * num) + denom
        b = num
        num = a
        denom = b
    #print (num, denom)
    return (num, denom)

def convergents(pq):
    c = []
    for i in range(1, len(pq)):
        c.append(rational(pq[0:i]))
    #print c
    return c

def phiN(e, d, k):
    return ((e * d) - 1) / k

# e = 17993
# n = 90581
# wiener_attack(e, n) --> p =  239, q =  379

# (e, n) = (0x52580198543E892BB161215392508AA5089BCCD33A3461C1C2CB4EC2C975EB3DE914AA1374B6AD0B4F55589DB50435756BDBA3A10CBA4C76820ED620603AE703E99009BBDC86F6DA743AA9DE554F759C5DD416028CCF4465219D448F586618CF8A7024CF9145AF6DF8115ED137F01C5397C24E9D1C5659B1DD9DF67561D63591,
#           0x2514e8dae7488caf4f3a114de1e08f230f71e3f399b35283b6f7581e6039617b3817f5e5ba00bad74f9d7820dca13be9ed8ea9f13c2ecba790d9ab44be5dd84f072e5eb9694dd137e83a2874d1775fb8c0bb4a3c104147f212ae17d93ec0eaaafadf5e87b766b83ef5c2133380bfe37fb02687268b1a66cb46b0c21a62f813a51)

n = 19151832364469874030079656094177469433748168317755320937083072949573978228040151291544777245502236063196608461579489201369362004815030043733578487623213116649503871348963086291090121132194306262070995109705539538000008869402966894933057821601958692723598201827384122175994529811585728974124104295733428673867761671345961704704766770069587683530400081798456337677918440893303424838955850202397155334659914701913224625386643156011571498705176434274346135086264358439897875710724119577193830819539267082010339965367194293064883650735739542790736709672328177446419935753094706115100204402545192136431549117485099267273329
# c = 13856751691370783634782646539158923978989309212516845580594517739524178211675149374207771880428923432662756145109269275116746054669737915883168919516891994386759407173353407285129849632732612836405168415117360620974230569349525403216399112819560791064818900387107601069076846202211837972422723015595593763213178529374267475564662278430111789325013021607370844312278701256369759034536276031219016112899698010680220395567056640888214017846277981539656803450412166412588991107727467348097720741899418399066657548330874326402875096187048577768762051434149161168814646583501927919837891266461653196134945092393368668463971
e = 65537

pq = partial_quotiens(e, n)
c = convergents(pq)
x = Symbol('x')
for (k, d) in c:
    if k != 0:
        y = n - phiN(e, d, k) + 1
        roots = solve(x**2 - y*x + n, x)
        if len(roots) == 2:
            p = roots[0]
            q = roots[1]
            if p * q == n:
                print('p = ', p)
                print('q = ', q)
                print('d = ', d)
                break

