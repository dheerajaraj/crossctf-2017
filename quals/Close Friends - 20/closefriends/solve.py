# from gmpy2 import *
# from Crypto.Util.number import *

n = 19151832364469874030079656094177469433748168317755320937083072949573978228040151291544777245502236063196608461579489201369362004815030043733578487623213116649503871348963086291090121132194306262070995109705539538000008869402966894933057821601958692723598201827384122175994529811585728974124104295733428673867761671345961704704766770069587683530400081798456337677918440893303424838955850202397155334659914701913224625386643156011571498705176434274346135086264358439897875710724119577193830819539267082010339965367194293064883650735739542790736709672328177446419935753094706115100204402545192136431549117485099267273329
c = 13856751691370783634782646539158923978989309212516845580594517739524178211675149374207771880428923432662756145109269275116746054669737915883168919516891994386759407173353407285129849632732612836405168415117360620974230569349525403216399112819560791064818900387107601069076846202211837972422723015595593763213178529374267475564662278430111789325013021607370844312278701256369759034536276031219016112899698010680220395567056640888214017846277981539656803450412166412588991107727467348097720741899418399066657548330874326402875096187048577768762051434149161168814646583501927919837891266461653196134945092393368668463971
e = 65537


p_str = ''.join('138 390145 474559 979704 018959 433486 332171 236693 523257 121207 855763 257601 215111 860353 723054 861659 320614 622191 253495 207107 734543 180548 210017 641587 057951 631900 485980 496061 774438 791272 456448 896948 365869 073759 311971 254087 871345 404407 643977 893681 606530 042245 542049 352120 256210 758480 682257 393112 074792 796566 675809 008927'.split())
q_str = ''.join('138 390145 474559 979704 018959 433486 332171 236693 523257 121207 855763 257601 215111 860353 723054 861659 320614 622191 253495 207107 734543 180548 210017 641587 057951 631900 485980 496061 774438 791272 456448 896948 365869 073759 311971 254087 871345 404407 643977 893681 606530 042245 542049 352120 256210 758480 682257 393112 074792 796566 675810 274927'.split())
phi_str = ''.joinsplit())
phi = int(phi_str)

print('p = ', p_str)
print('q = ', q_str)

print(phi)

def extended_gcd(aa, bb):
    lastremainder, remainder = abs(aa), abs(bb)
    x, lastx, y, lasty = 0, 1, 1, 0
    while remainder:
        lastremainder, (quotient, remainder) = remainder, divmod(lastremainder, remainder)
        x, lastx = lastx - quotient*x, x
        y, lasty = lasty - quotient*y, y
    return lastremainder, lastx * (-1 if aa < 0 else 1), lasty * (-1 if bb < 0 else 1)
 

def modinv(a, m):
	g, x, y = extended_gcd(a, m)
	if g != 1:
		raise ValueError
	return x % m

def powmod(a, p, n):
	r = 1
	while p > 0:
		if p&1:
			r = (r * a) % n

		p >>= 1
		a = (a * a) % n
	return r

d = modinv(e, phi)

m = powmod(c, d, n)

print('m = %x' %m)